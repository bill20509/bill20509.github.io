[{"content":"關於我  性別 : 男 年齡 : 24 職稱 : Engineer 學歷 : 國立中山大學資訊工程學系 Email : maxbill20509@gmail.com  個人興趣  後端有關的任何技術 CI/CD、自動化部屬、測試 音樂/爵士鼓  ","description":"Introduction","id":0,"section":"","tags":null,"title":"","uri":"https://bill20509.github.io/about/"},{"content":"Fault, Error \u0026amp; Failure  在軟體與硬體中都有Fault, Error \u0026amp; Failure，此處我們只討論軟體  Software Fault  A static defect in the software(i.e., defect) 靜態存在於code中的錯誤  Software Error  An incorrect internal state that is the manifestation of some faults 由fault觸發的錯誤中間狀態  Software Failure  External, incorrect behavior with respect to the requirements of othere description of the expected behavior 由Error所傳播出去，使測試人員或使用者所觀測到的失效行為  實例  說明 - 給定input numbers, 算出平均值 Fault - i的初始值誤設為1(應為0) Error - sum誤算為4+5 (應為3+4+5) Failure - mean誤算為3 (應為3)  PIE Model  首字母P、I、E所組成 只有達成下面三項，才會得到failure  Execution/Reachability -\u0026gt; Fault  The location or lcations in the program that contain the fault must be reached 測試必須執行到fault的位置  Infection -\u0026gt; Error  The state of the program must be incorrect 即使執行到fault的位置，也不一定會觸發Error  此例中，即使執行到了fault，但碰巧地沒有觸發error，最終的結果也是正確  Propagation -\u0026gt; Failure  The infected state must propagate to cause some output of the program to be incorrect 即使執行到了fault，觸發了error，也可能沒有failure  Fault - length長度錯誤值 number.length-1 (應為number.length) Error - sum值計算錯誤3+5(應為3+5+4) Failure - 然後最終碰巧地沒有Failure  Quiz  Is there is a fault, which cannot be revealed by any test? Is it a fault or not a fault? 我的見解是，這不算fault，因為唯有被測試出來，才能稱之為fault，雞生蛋、蛋生雞的概念  Exercise  Please constrct a simple program P(with a fault) and 3 tests(t1, t2, t3), s.t.  t1 executes the fault, but no error t2 (executes the fault and) produces an error, but no failure t3 produces a failure    1 2 3 4 5 6 7 8 9 10 11  string string_reverse(string input){ int length = input.length() - 2; int i = 1; int j = length; while(i \u0026lt; j) { swap(input[i], input[j]); i++; j--; } return input; }    tests(t1, t2, t3)  t1 = t2 = t3 =    ","description":"Fault、Error、Failure以及PIE Model的介紹","id":1,"section":"posts","tags":["testing","terminology"],"title":"PIE Model","uri":"https://bill20509.github.io/posts/pie_model/"},{"content":"Test Case  一個Test Case包含Test Input(測試輸入)、Test Oracle(預期輸出)、Enivironment(測試環境) 有時test case等於test input，端看如何定義 需要描述test case的環境  Testing vs. Debugging  Testing是執行test case並找出failure Debugging則是定位處fault並矯正fault  Validation vs. Verification Validation  確認SPEC符合客戶的需求  Verification  確認SPEC與實現是否一致  靜/動態測試 Static Testing  without excuting programs 嚴格來講不算測試  Dynamic Testing  with excuting programgs 大部分討論的都是動態測試  黑/白盒測試 Black-box Testing  without source code 在測試中不需要知道內部的結構  White-box Testing  with source code 需要原始碼，去分析可能出現的問題  灰盒測試?  錯誤 - 白盒+黑盒測試 正確 - 指透過其他程式或反編譯，獲得部分訊息，進而進行測試 例子 - 在android中，透過反編譯得到結構訊息進行測試  Testing Level  這些level定義的範圍是模糊的、非標準化，在不同公司可能有不同定義 在Google中分為小、中、大測試 Google軟件測試之道  V-Model  需求、設計、Coding、測試的流程 由於現今的開發流程快速，這個模型可能已不大適用  測試過程 資料來源 V-Model\n南京大學軟件測試課程\n","description":"測試相關名詞解釋","id":2,"section":"posts","tags":["testing","terminology"],"title":"Testing Terminology","uri":"https://bill20509.github.io/posts/terminology/"}]